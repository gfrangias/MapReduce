version: '3.7'


networks:
  map_reduce_network:
    name: map_reduce_net
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.0.0/16


services:
  mysql:
    container_name: mysql
    image: mysql:5.7
    volumes:
      - ./mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
    ports:
      - 3306:3306
    networks:
      map_reduce_network:
        ipv4_address: 172.16.0.2


  keycloak:
    container_name: keycloak_0
    image: quay.io/keycloak/keycloak:legacy
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: zooops
      JDBC_PARAMS: 'useSSL=false'
    ports:
      - 8080:8080
    expose:
      - 8080      
    depends_on:
      - mysql
    volumes:
     - ./keycloak_data:/opt/keycloak/data/import
    networks:
      map_reduce_network:
        ipv4_address: 172.16.0.3


  ui_svc_1:
    container_name: ui_svc_1
    build: 
      context: .
      dockerfile: Dockerfile_ui    
    volumes:
      - ./ui_svc_data:/var/www/html
      - ./filedb/uploads:/var/www/html/uploads
      - ./apache_init/php.ini:/usr/local/etc/php/php.ini
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      map_reduce_network:
        ipv4_address: 172.16.0.4
    expose:
      - 80
    command: >
      bash -c "cd /var/www/html && composer require docker-php/docker-php && chmod 666 /var/run/docker.sock && apache2-foreground"
    ports:
      - 7777:80

  ui_svc_2:
    container_name: ui_svc_2
    build: 
      context: .
      dockerfile: Dockerfile_ui
    volumes:
      - ./ui_svc_data:/var/www/html
      - ./filedb/uploads:/var/www/html/uploads
      - ./apache_init/php.ini:/usr/local/etc/php/php.ini
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      map_reduce_network:
        ipv4_address: 172.16.0.5
    expose:
      - 80

  ui_svc_3:
    container_name: ui_svc_3
    build: 
      context: .
      dockerfile: Dockerfile_ui   
    volumes:
      - ./ui_svc_data:/var/www/html
      - ./filedb/uploads:/var/www/html/uploads
      - ./apache_init/php.ini:/usr/local/etc/php/php.ini
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      map_reduce_network:
        ipv4_address: 172.16.0.6
    expose:
      - 80

  haproxy:
    image: haproxy:latest
    container_name: proxyLB
    volumes:
      - ./haproxy_data/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    networks:
      map_reduce_network:
        ipv4_address: 172.16.0.254
    ports:
      - 80:80

  redis:
    image: redis:latest
    container_name: redis
    networks:
      map_reduce_network:
        ipv4_address: 172.16.0.253
    expose:
      - 6379

  zookeeper1:
    image: zookeeper
    container_name: zookeeper1
    restart: always
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper1:2888:3888;2181 server.2=zookeeper2:2888:3888;2181 server.3=zookeeper3:2888:3888;2181
    ports:
      - 2181:2181
    expose:
      - 2181
    networks:
      map_reduce_network:
        ipv4_address: 172.16.0.11

  zookeeper2:
    image: zookeeper
    container_name: zookeeper2
    restart: always
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zookeeper1:2888:3888;2181 server.2=zookeeper2:2888:3888;2181 server.3=zookeeper3:2888:3888;2181
    ports:
      - 2182:2181
    expose:
      - 2181
    networks:
      map_reduce_network:
        ipv4_address: 172.16.0.12

  zookeeper3:
    image: zookeeper
    container_name: zookeeper3
    restart: always
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zookeeper1:2888:3888;2181 server.2=zookeeper2:2888:3888;2181 server.3=zookeeper3:2888:3888;2181
    ports:
      - 2183:2181
    expose:
      - 2181
    networks:
      map_reduce_network:
        ipv4_address: 172.16.0.13


  fathermonitor:
      container_name: fathermonitor
      build:
        context: .
        dockerfile: Dockerfile
      environment:
        CONTAINER_NAME: fathermonitor
      depends_on:
        - zookeeper1
        - zookeeper2
        - zookeeper3
      ports:
        - 7000:7000
      networks:
        map_reduce_network:
          ipv4_address: 172.16.0.19      
  zoonavigator:
    image: elkozmon/zoonavigator:0.7.1
    container_name: zoonavigator
    restart: unless-stopped
    networks:
        map_reduce_network:
          ipv4_address: 172.16.0.20
    ports:
      - 9000:9000/tcp
    environment:
      ########## Server ##########

      # Tells the HTTP server which port to bind to. To disable HTTP set this variable to disabled.
      HTTP_PORT: 9000
    
      AUTO_CONNECT_CONNECTION_STRING: '172.16.0.11:2181,172.16.0.12:2181,172.16.0.13:2181'
      
      # Sets inactivity timeout for ZooKeeper client. If user doesnâ€™t make any request during this period ZooKeeper
      # connection will be closed and recreated for the future request if any. Note that user does not get logged out
      # unlike in event of session timeout. This value is in milliseconds.
      ZK_CLIENT_TIMEOUT_MILLIS: 15000

      # Sets timeout for attempt to establish connection with ZooKeeper. This value is in milliseconds.
      ZK_CONNECT_TIMEOUT_MILLIS: 15000

      # Set the value to false to disable SASL authentication.
      ZK_SASL_CLIENT: 'false'
      
      ZK_CLIENT_CNXN_SOCKET: 'org.apache.zookeeper.ClientCnxnSocketNIO'

      